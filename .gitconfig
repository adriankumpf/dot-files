[user]
    name = Adrian Kumpf
    email = 8999358+adriankumpf@users.noreply.github.com
    signingkey = 7D277D998FC73FE6
[core]
    excludesfile = ~/.gitignore
[push]
    default = simple
    followTags = true
[color]
    status = always
    ui = true
[core]
    editor = nvim
[help]
    autocorrect = 1
[alias]
    aa = add --all
    ap = add --patch
    ci = commit --verbose
    amend = commit --amend --verbose
    co = checkout
    pl = pull
    ps = push
    st = status -sb
    lo = log --oneline -n 15
    wc = whatchanged -p --abbrev-commit --pretty=medium -- :!*package-lock.json :!*(yarn|Cargo).lock
    stash-all = stash save --include-untracked
    unstage = reset HEAD --
    # Show the branches, ordered by most recently updated closest to prompt.
    # Also shows the last commit and committer for each branch listed.
    recent = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'

[diff]
    colorMoved = default
[pager]
    diff = delta
    show = delta
    log = delta
    blame = delta
    grep = delta
    reflog = delta
[interactive]
    diffFilter = delta --color-only
[delta]
    hyperlinks = true
    line-numbers = true
    syntax-theme = gruvbox_dark_medium
    max-line-length = 16384
[github]
    user = adriankumpf
[branch]
    autosetuprebase = always
    sort = -committerdate
[merge]
    conflictStyle = zdiff3
    log = 1000
[pull]
    rebase = true
[rebase]
    autosquash = true
    autoStash = true
[rerere]
    enabled = true
[merge "npm-merge-driver"]
    name = automatically merge npm lockfiles
    driver = npx npm-merge-driver merge %A %O %B %P
[filter "lfs"]
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
[absorb]
    maxStack=50
[commit]
    gpgsign = true
[gpg]
    program = gpg
[tag]
    gpgsign = true
[init]
    defaultBranch = main
[includeIf "gitdir:~/Developer/work/"]
    path = ~/Developer/work/.gitconfig
